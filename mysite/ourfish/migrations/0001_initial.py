# Generated by Django 4.0.1 on 2022-02-10 19:21

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataBuyer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.IntegerField()),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_buyer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataBuyingunit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.CharField(max_length=100)),
                ('label', models.CharField(max_length=20)),
                ('notes', models.TextField()),
                ('collect_weight', models.BooleanField()),
                ('weight_units', models.CharField(max_length=10)),
                ('weight_si', models.FloatField(blank=True, null=True)),
                ('collect_count', models.BooleanField()),
                ('collect_volume', models.BooleanField()),
                ('volume_units', models.CharField(max_length=10)),
                ('volume_si', models.FloatField(blank=True, null=True)),
                ('collect_category', models.BooleanField()),
                ('order', models.IntegerField()),
                ('count_max', models.FloatField(blank=True, null=True)),
                ('count_min', models.FloatField(blank=True, null=True)),
                ('price_max', models.FloatField(blank=True, null=True)),
                ('price_min', models.FloatField(blank=True, null=True)),
                ('weight_max', models.FloatField(blank=True, null=True)),
                ('weight_min', models.FloatField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_buyingunit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataCatch',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('data', models.TextField()),
                ('customsupplyquantity', models.FloatField(blank=True, db_column='customSupplyQuantity', null=True)),
                ('caneditordelete', models.BooleanField(db_column='canEditOrDelete')),
                ('iscommercial', models.BooleanField(db_column='isCommercial')),
                ('wrong_fisher', models.CharField(blank=True, max_length=256, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_catch',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataCommunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region_code', models.CharField(max_length=50)),
                ('level4_id', models.CharField(blank=True, max_length=256, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_community',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataCountry',
            fields=[
                ('id', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('active', models.BooleanField()),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataCustomsupplies',
            fields=[
                ('id_custom_supply', models.UUIDField(primary_key=True, serialize=False)),
                ('custom_suply_name', models.CharField(max_length=100)),
                ('measure_unit', models.CharField(max_length=100)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_customsupplies',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataExpense',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('expense_type', models.IntegerField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('total_price', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('price_exponent', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('isdonation', models.BooleanField(blank=True, db_column='isDonation', null=True)),
                ('ispayment', models.BooleanField(blank=True, db_column='isPayment', null=True)),
                ('isrecordaftertp', models.BooleanField(blank=True, db_column='isRecordAfterTP', null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_expense',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataFishbasespeciestype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fishbase_id', models.IntegerField()),
                ('species', models.CharField(max_length=255)),
                ('details_url', models.CharField(max_length=200)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_fishbasespeciestype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataFisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fisher_id', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('image', models.CharField(max_length=100)),
                ('last_modified_date', models.DateTimeField()),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('whatsapp', models.BooleanField(blank=True, null=True)),
                ('expired', models.BooleanField(blank=True, null=True)),
                ('level4_id', models.CharField(blank=True, max_length=255, null=True)),
                ('municipality', models.CharField(blank=True, max_length=255, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_fisher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataFishersatisfactionrating',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('value', models.IntegerField()),
                ('date', models.DateTimeField()),
                ('fishers_number', models.IntegerField()),
                ('numberofhours', models.IntegerField(blank=True, db_column='numberOfHours', null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_fishersatisfactionrating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataFishinventory',
            fields=[
                ('id_fish_inventory', models.UUIDField(primary_key=True, serialize=False)),
                ('delivery_date', models.DateTimeField()),
                ('total_paid_amount', models.IntegerField(blank=True, null=True)),
                ('purchased_weight', models.FloatField(blank=True, null=True)),
                ('purchased_quantity', models.FloatField(blank=True, null=True)),
                ('purchased_volume', models.FloatField(blank=True, null=True)),
                ('total_received_amount', models.IntegerField(blank=True, null=True)),
                ('weight_in_stock', models.FloatField(blank=True, null=True)),
                ('quantity_in_stock', models.FloatField(blank=True, null=True)),
                ('volume_in_stock', models.FloatField(blank=True, null=True)),
                ('price_exponent', models.IntegerField()),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_fishinventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataFishsales',
            fields=[
                ('id_sale', models.UUIDField(primary_key=True, serialize=False)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('quantity', models.FloatField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('price_exponent', models.IntegerField()),
                ('isunsold', models.BooleanField(db_column='isUnsold')),
                ('note', models.TextField()),
                ('date', models.DateTimeField()),
                ('total_price', models.IntegerField(blank=True, null=True)),
                ('unit_price', models.IntegerField(blank=True, null=True)),
                ('unsoldreason', models.IntegerField(blank=True, db_column='unsoldReason', null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_fishsales',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataGeartype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=128)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_geartype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataImportoperationlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_date', models.DateTimeField()),
                ('import_from_date', models.DateTimeField()),
                ('finished_date', models.DateTimeField(blank=True, null=True)),
                ('op_type', models.CharField(max_length=1)),
                ('pages', models.IntegerField()),
                ('total_pages', models.IntegerField()),
                ('processed', models.IntegerField()),
                ('total', models.IntegerField()),
                ('errors', models.IntegerField()),
            ],
            options={
                'db_table': 'fishdata_importoperationlog',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataInstallation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('price_exponent', models.IntegerField()),
                ('price_currency', models.CharField(max_length=3)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_installation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataLanguage',
            fields=[
                ('id', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'fishdata_language',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_range',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataRangevalue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=20)),
                ('notes', models.TextField()),
                ('order', models.IntegerField()),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_rangevalue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataSelltransaction',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('total_price', models.IntegerField()),
                ('price_exponent', models.IntegerField()),
                ('weight', models.FloatField(blank=True, null=True)),
                ('count', models.IntegerField(blank=True, null=True)),
                ('volume', models.FloatField(blank=True, null=True)),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_selltransaction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataSupplyinventory',
            fields=[
                ('id_supplyinventory', models.UUIDField(db_column='id_supplyInventory', primary_key=True, serialize=False)),
                ('type_of_supply', models.IntegerField()),
                ('total_paid_amount', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_supplyinventory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FishdataSupplypurchases',
            fields=[
                ('id_purchase', models.UUIDField(primary_key=True, serialize=False)),
                ('purchase_date', models.DateTimeField()),
                ('type_of_supply', models.IntegerField()),
                ('total_paid_amount', models.IntegerField()),
                ('price_exponent', models.IntegerField()),
                ('modified', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fishdata_supplypurchases',
                'managed': False,
            },
        ),
    ]
